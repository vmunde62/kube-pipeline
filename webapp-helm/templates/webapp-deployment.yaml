apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: webapp
spec:
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      name: {{ .Values.app.name }}
      labels:
        app: webapp
    spec:  
      serviceAccountName: {{ .Values.app.saName }}
      containers:
        - image: {{ .Values.app.image }}  
          name: {{ .Values.app.containerName }}
          env:                                                    # Environment variables to mount.
            - name: {{ .Values.Secrets.Objects.tlscrt.name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Secrets.secretName }}
                  key: {{ .Values.Secrets.Objects.tlscrt.key }}
            - name: {{ .Values.Secrets.Objects.tlskey.name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Secrets.secretName }}
                  key: {{ .Values.Secrets.Objects.tlskey.key }}
            - name: {{ .Values.Secrets.Objects.password.name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Secrets.secretName }}
                  key: {{ .Values.Secrets.Objects.password.key }}  
          volumeMounts:
          - name: jksfile
            mountPath: {{ .Values.volumes.path }}
          - name: secrets-store-inline                            #  Mounted this volume from the csi driver. 
            mountPath: {{ .Values.init.csiVolume }}  
            readOnly: true 
      initContainers:
        - name: keystore
          image: {{ .Values.init.image }}  
          env:
            - name: {{ .Values.Secrets.Objects.tlscrt.name }}
              value: {{ .Values.Secrets.Objects.tlscrt.path }}
            - name: {{ .Values.Secrets.Objects.tlskey.name }}
              value: {{ .Values.Secrets.Objects.tlskey.path }} 
            - name: {{ .Values.Secrets.Objects.password.name }}
              value: {{ .Values.Secrets.Objects.password.path }} 
            - name: {{ .Values.Secrets.Objects.trustedca1.name }}
              value: {{ .Values.Secrets.Objects.trustedca1.path }}
            - name: {{ .Values.Secrets.Objects.trustedca2.name }}
              value: {{ .Values.Secrets.Objects.trustedca2.path }}
            - name: {{ .Values.Secrets.Objects.trustedca3.name }}
              value: {{ .Values.Secrets.Objects.trustedca3.path }}
            - name: keystore_pkcs12
              value: {{ .Values.init.pkcsPath }}
            - name: keystore_jks
              value: {{ .Values.init.jksPath }}
            - name: client_truststore
              value: {{ .Values.init.truststorePath}}
          command: ["/bin/sh"]
          args: ["-c", "{{ .Values.init.keystore_run }};{{ .Values.init.truststore_run }}" ]
          volumeMounts:
          - name: secrets-store-inline   #  Mounted this volume from the csi driver. 
            mountPath: {{ .Values.init.csiVolume }}  
            readOnly: true
          - name: jksfile
            mountPath: {{ .Values.volumes.path }}   

      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.init.spcName }} 
        - name: jksfile
          emptyDir: {}
